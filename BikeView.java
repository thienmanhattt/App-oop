
package View;

import Entity.Bike;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
public class BikeView extends javax.swing.JFrame {
    private final String [] columnNames = new String [] {
        "ID", "Tên","Biển số","Hãng", "Tình trạng", "Giá"};
    /**
     * Creates new form View
     */
    public BikeView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bikeTable = new javax.swing.JTable();
        addBikeBtn = new javax.swing.JButton();
        deleteBikeBtn = new javax.swing.JButton();
        editBikeBtn = new javax.swing.JButton();
        sortBikeNameBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        ID = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        Tên = new javax.swing.JLabel();
        tenField = new javax.swing.JTextField();
        Hãng = new javax.swing.JLabel();
        hangField = new javax.swing.JTextField();
        Tinhtrang = new javax.swing.JLabel();
        tinhtrangField = new javax.swing.JTextField();
        Giá = new javax.swing.JLabel();
        giaField = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        Timkiem = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        sortBikegiaBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        biensoField = new javax.swing.JTextField();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bike Information");
        setIconImage(new ImageIcon("src/main/java/View/imagess.png").getImage());

        bikeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Tên", "Hãng", "Giá","Tình trạng"
            }
        ));
        jScrollPane1.setViewportView(bikeTable);

        addBikeBtn.setText("Thêm");
        addBikeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBikeBtnActionPerformed(evt);
            }
        });

        deleteBikeBtn.setText("Xóa");

        editBikeBtn.setText("Chỉnh sửa");

        sortBikeNameBtn.setText("Sắp xếp theo tên");

        searchBtn.setText("Tìm kiếm");

        ID.setText("ID:");

        Tên.setText("Tên xe:");

        Hãng.setText("Hãng xe:");

        Tinhtrang.setText("Tình trạng xe:");

        Giá.setText("Giá thuê xe(VND):");

        clearBtn.setText("Clear");

        Timkiem.setText("Tìm kiếm:");

        sortBikegiaBtn.setText("Sắp xếp theo giá");

        jLabel1.setText("Biển số xe:");

        biensoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biensoFieldActionPerformed(evt);
            }
        });

        exitBtn.setText("Thoát tìm kiếm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(giaField)
                            .addComponent(tinhtrangField)
                            .addComponent(hangField)
                            .addComponent(tenField)
                            .addComponent(idField)
                            .addComponent(biensoField)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Hãng, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tinhtrang, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Tên, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Giá, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchBtn)
                        .addGap(32, 32, 32)
                        .addComponent(exitBtn)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(clearBtn)
                        .addGap(26, 26, 26)
                        .addComponent(addBikeBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBikeBtn)
                        .addGap(18, 18, 18)
                        .addComponent(editBikeBtn)
                        .addGap(18, 18, 18)
                        .addComponent(sortBikeNameBtn)
                        .addGap(18, 18, 18)
                        .addComponent(sortBikegiaBtn))
                    .addComponent(jScrollPane1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(ID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tên)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hãng)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hangField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tinhtrang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tinhtrangField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Giá)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(giaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(biensoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Timkiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBikeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBikeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBikeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortBikeNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortBikegiaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void biensoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biensoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_biensoFieldActionPerformed

    private void addBikeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBikeBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBikeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BikeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BikeView().setVisible(true);
        });
    }
    
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    
    public void showListBikes(List<Bike> list) {
        int size = list.size();
        // với bảng bikeTable có 6 cột, 
        // khởi tạo mảng 2 chiều bikes, trong đó:
        // số hàng: là kích thước của list bike 
        // số cột: là 6
        Object [][] bikes = new Object[size][6];
        for (int i = 0; i < size; i++) {
            bikes[i][0] = list.get(i).getId();
            bikes[i][1] = list.get(i).getTen();
            bikes[i][2] = list.get(i).getBienso();
            bikes[i][3] = list.get(i).getHang();
            bikes[i][4]= list.get(i).getTinhtrang();
            bikes[i][5] = list.get(i).getGia();
        }
        bikeTable.setModel(new DefaultTableModel(bikes, columnNames));
    }
    
        /**
     * điền thông tin của hàng được chọn từ bảng bike 
     * vào các trường tương ứng của bike.
     */
    public void fillBikeFromSelectedRow() {
        // lấy chỉ số của hàng được chọn 
        int row = bikeTable.getSelectedRow();
        if (row >= 0) {
            idField.setText(bikeTable.getModel().getValueAt(row, 0).toString());
            tenField.setText(bikeTable.getModel().getValueAt(row, 1).toString());
            biensoField.setText(bikeTable.getModel().getValueAt(row,2).toString());
            hangField.setText(bikeTable.getModel().getValueAt(row, 3).toString());
            tinhtrangField.setText(bikeTable.getModel().getValueAt(row, 4).toString());
            giaField.setText(bikeTable.getModel().getValueAt(row, 5).toString());
            // enable Edit and Delete buttons
            editBikeBtn.setEnabled(true);
            deleteBikeBtn.setEnabled(true);
            // disable Add button
            addBikeBtn.setEnabled(false);
        }
    }

    /**
     * xóa thông tin bike
     */
    public void clearBikeInfo() {
        idField.setText("");
        tenField.setText("");
        biensoField.setText("");
        hangField.setText("");
        tinhtrangField.setText("");
        giaField.setText("");
        searchField.setText("");
        // disable Edit and Delete buttons
        editBikeBtn.setEnabled(false);
        deleteBikeBtn.setEnabled(false);
        // enable Add button
        addBikeBtn.setEnabled(true);
    }
       
    /**
     * hiện thị thông tin bike
     * 
     * @param bike
     */
    public void showBike(Bike bike) {
        idField.setText("" + bike.getId());
        tenField.setText(bike.getTen());
        biensoField.setText(bike.getBienso());
        hangField.setText(bike.getHang());
        tinhtrangField.setText(bike.getTinhtrang());
        giaField.setText("" + bike.getGia());
        // enable Edit and Delete buttons
        editBikeBtn.setEnabled(true);
        deleteBikeBtn.setEnabled(true); 
        // disable Add button
        addBikeBtn.setEnabled(false);
    }
    
    /**
     * lấy thông tin bike
     * 
     * @return
     */
    public Bike getBikeInfo() {
        // validate bike
        if (!validateTen() || !validateBienso() ||  !validateHang() || !validateTinhtrang() || !validateGia()) {
            return null;
        }
        try {
            Bike bike = new Bike();
            if (idField.getText() != null && !"".equals(idField.getText())) {
                bike.setId(Integer.parseInt(idField.getText()));
            }
            bike.setTen(tenField.getText().trim());
            bike.setBienso(biensoField.getText().trim());
            bike.setHang(hangField.getText().trim());
            bike.setTinhtrang(tinhtrangField.getText().trim());
            bike.setGia(Float.parseFloat(giaField.getText().trim()));
            return bike;
        } catch (NumberFormatException e) {
            showMessage(e.getMessage());
        }
        return null;
    }
    
    private boolean validateTen() {
        String ten = tenField.getText();
        if (ten == null || "".equals(ten.trim())) {
            tenField.requestFocus();
            showMessage("Tên xe không được trống!");
            return false;
        }
        return true;
    }
    
    private boolean validateBienso() {
        String bienso = biensoField.getText();
        if (bienso == null || "".equals(bienso.trim())) {
            biensoField.requestFocus();
            showMessage("Biển số xe không được trống!");
            return false;
        }
        return true;
    }

    private boolean validateHang() {
        String hang = hangField.getText();
        if (hang == null || "".equals(hang.trim())) {
            hangField.requestFocus();
            showMessage("Hãng xe không được trống!");
            return false;
        }
        return true;
    }
    
    private boolean validateTinhtrang() {
        String tinhtrang = tinhtrangField.getText();
        if (tinhtrangField == null || "".equals(tinhtrang.trim())) {
            tinhtrangField.requestFocus();
            showMessage("Tình trạng không được trống.");
            return false;
        }
        return true;
    }
    
    private boolean validateGia() {
        try {
            Float price = Float.valueOf(giaField.getText().trim());
            if (price < 0 ) {
                giaField.requestFocus();
                showMessage("Giá thuê xe không hợp lệ!");
                return false;
            }
        } catch (NumberFormatException e) {
            giaField.requestFocus();
            showMessage("Giá thuê xe không hợp lệ!");
            return false;
        }
        return true;
    }
    
    public String validateSearch(){
        String search = searchField.getText();
        if (search == null || "".equals(search.trim()) || !search.matches("[a-zA-Z\\s]+")) {
            searchField.requestFocus();
            showMessage("Nội dung tìm kiếm không hợp lệ!");
            return "";
        }
        
        return search;
    }
    
    public void cancelSearchBike()
    {
        String id=idField.getText();
        exitBtn.setEnabled(false);
        exitBtn.setEnabled(true);
        clearBtn.setEnabled(true);
        if (id == null || "".equals(id.trim()))
        {
            
            addBikeBtn.setEnabled(true);
            editBikeBtn.setEnabled(false);
            deleteBikeBtn.setEnabled(false);
        }
        else
        {
            addBikeBtn.setEnabled(false);
            editBikeBtn.setEnabled(true);
            deleteBikeBtn.setEnabled(true);
        }
    }
    
    public void addCancelSearchBikeListener(ActionListener listener){
        exitBtn.addActionListener(listener);
    }  
    
    public void actionPerformed(ActionEvent e) {
    }
    
    public void valueChanged(ListSelectionEvent e) {
    }
    
    public void addAddBikeListener(ActionListener listener) {
        addBikeBtn.addActionListener(listener);
    }
    
    public void addEdiBikeListener(ActionListener listener) {
        editBikeBtn.addActionListener(listener);
    }
    
    public void addDeleteBikeListener(ActionListener listener) {
        deleteBikeBtn.addActionListener(listener);
    }
    
    public void addClearBikeListener(ActionListener listener) {
        clearBtn.addActionListener(listener);
    }
    
    public void addSearchBikeListener(ActionListener listener){
        searchBtn.addActionListener(listener);
    }
    
    public void addSortBikeNameListener(ActionListener listener) {
        sortBikeNameBtn.addActionListener(listener);
    }
    
    public void addSortBikegiaListener(ActionListener listener) {
       sortBikegiaBtn.addActionListener(listener);
    }
    
    public void addListBikeSelectionListener(ListSelectionListener listener) {
        bikeTable.getSelectionModel().addListSelectionListener(listener);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Giá;
    private javax.swing.JLabel Hãng;
    private javax.swing.JLabel ID;
    private javax.swing.JLabel Timkiem;
    private javax.swing.JLabel Tinhtrang;
    private javax.swing.JLabel Tên;
    private javax.swing.JButton addBikeBtn;
    private javax.swing.JTextField biensoField;
    private javax.swing.JTable bikeTable;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBikeBtn;
    private javax.swing.JButton editBikeBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField giaField;
    private javax.swing.JTextField hangField;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton sortBikeNameBtn;
    private javax.swing.JButton sortBikegiaBtn;
    private javax.swing.JTextField tenField;
    private javax.swing.JTextField tinhtrangField;
    // End of variables declaration//GEN-END:variables

}
